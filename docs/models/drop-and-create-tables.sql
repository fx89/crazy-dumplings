-- Project name  : crazydumplings-gameassets
-- Company name  : crazydumplings
-- Unit name     : gameregistry
-- App name      : gameassetmanager
-- Customer name : crazydumplings


-- CREATE TABLES --


drop table if exists `PLAYABLE_CHARACTER_TYPE`;

create table `PLAYABLE_CHARACTER_TYPE` (
	ID_PLAYABLE_CHARACTER_TYPE INT NOT NULL AUTO_INCREMENT,

	UNIQUE_CHARACTER_TYPE_NAME VARCHAR(250) NULL,
	GAME_OBJECT_TYPE_ID INT NULL,

	primary key (ID_PLAYABLE_CHARACTER_TYPE)
);


drop table if exists `GAME_WORLD_SPAWN_POINT_TYPE`;

create table `GAME_WORLD_SPAWN_POINT_TYPE` (
	ID_GAME_WORLD_SPAWN_POINT_TYPE INT NOT NULL AUTO_INCREMENT,

	SPAWN_POINT_GAME_OBJECT_TYPE_ID INT NULL,
	SPAWNED_GAME_OBJECT_TYPE_ID INT NULL,

	primary key (ID_GAME_WORLD_SPAWN_POINT_TYPE)
);


drop table if exists `GAME_WORLD_CELL_TYPE`;

create table `GAME_WORLD_CELL_TYPE` (
	ID_GAME_WORLD_CELL_TYPE INT NOT NULL AUTO_INCREMENT,

	UNIQUE_NAME VARCHAR(250) NULL,
	GAME_OBJECT_TYPE_ID INT NULL,

	primary key (ID_GAME_WORLD_CELL_TYPE)
);


drop table if exists `GAME_WORLD`;

create table `GAME_WORLD` (
	ID_GAME_WORLD INT NOT NULL AUTO_INCREMENT,

	UNIQUE_NAME VARCHAR(250) NULL,
	DESCRIPTION TEXT NULL,
	PICTURE_REF_PATH TEXT NULL,
	WIDTH INT NULL,
	HEIGHT INT NULL,

	primary key (ID_GAME_WORLD)
);


drop table if exists `GAME_WORLD_CELL`;

create table `GAME_WORLD_CELL` (
	ID_GAME_WORLD_CELL INT NOT NULL AUTO_INCREMENT,

	GAME_WORLD_ID INT NULL,
	GAME_WORLD_CELL_TYPE_ID INT NULL,
	X_INDEX INT NULL,
	Y_INDEX INT NULL,
	ATTACHED_GAME_WORLD_SPAWN_POINT_TYPE_ID INT NULL,

	primary key (ID_GAME_WORLD_CELL)
);


drop table if exists `GAME_WORLD_CELL_PROPERTY`;

create table `GAME_WORLD_CELL_PROPERTY` (
	ID_GAME_WORLD_CELL_PROPERTY INT NOT NULL AUTO_INCREMENT,

	GAME_WORLD_CELL_ID INT NULL,
	GAME_OBJECT_TYPE_PROPERTY_ID INT NULL,
	PROPERTY_ACTUAL_VALUE DOUBLE NULL,

	primary key (ID_GAME_WORLD_CELL_PROPERTY)
);


drop table if exists `AUTOMATION_OBJECT_PROVIDER`;

create table `AUTOMATION_OBJECT_PROVIDER` (
	ID_AUTOMATION_OBJECT_PROVIDER INT NOT NULL AUTO_INCREMENT,

	NAME VARCHAR(250) NULL,

	primary key (ID_AUTOMATION_OBJECT_PROVIDER)
);


drop table if exists `GAME_OBJECT_TYPE_AUTOMATION`;

create table `GAME_OBJECT_TYPE_AUTOMATION` (
	ID_GAME_OBJECT_TYPE_AUTOMATION INT NOT NULL AUTO_INCREMENT,

	GAME_OBJECT_TYPE_ID INT NULL,
	AUTOMATION_OBJECT_PROVIDER_ID INT NULL,

	primary key (ID_GAME_OBJECT_TYPE_AUTOMATION)
);


drop table if exists `ACTION`;

create table `ACTION` (
	ID_ACTION INT NOT NULL AUTO_INCREMENT,

	UNIQUE_NAME VARCHAR(250) NULL,

	primary key (ID_ACTION)
);


drop table if exists `GAME_OBJECT_TYPE_STATE_TRANSITION`;

create table `GAME_OBJECT_TYPE_STATE_TRANSITION` (
	ID_GAME_OBJECT_TYPE_STATE_TRANSITION INT NOT NULL AUTO_INCREMENT,

	SOURCE_GAME_OBJECT_TYPE_STATE_ID INT NULL,
	TARGET_GAME_OBJECT_TYPE_STATE_ID INT NULL,
	IS_AUTOMATIC short NULL,
	TRIGGER_ACTION_ID INT NULL,

	primary key (ID_GAME_OBJECT_TYPE_STATE_TRANSITION)
);


drop table if exists `GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE`;

create table `GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE` (
	ID_GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE INT NOT NULL AUTO_INCREMENT,

	UNIQUE_NAME VARCHAR(250) NULL,
	ADDON_GAME_OBJECT_TYPE_ID INT NULL,
	APPLICABLE_TO_GAME_OBJECT_TYPE_ID INT NULL,
	IS_EQUIPED_BY_DEFAULT short NULL,
	IS_INCREMENTAL short NULL,
	IS_TRIGGERED short NULL,
	TRIGGER_ACTION_ID INT NULL,
	IS_SPAWNING short NULL,
	SPAWNABLE_GAME_OBJECT_TYPE_ID INT NULL,
	HAS_LIMITED_DURATION short NULL,
	DURATION INT NULL,

	primary key (ID_GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE)
);


drop table if exists `GAME_OBJECT_TYPE_INTERACTION`;

create table `GAME_OBJECT_TYPE_INTERACTION` (
	ID_GAME_OBJECT_TYPE_INTERACTION INT NOT NULL AUTO_INCREMENT,

	DONATING_GAME_OBJECT_TYPE_ID INT NULL,
	RECEIVING_GAME_OBJECT_TYPE_ID INT NULL,
	RADIUS INT NULL,

	primary key (ID_GAME_OBJECT_TYPE_INTERACTION)
);


drop table if exists `GAME_CLIENT_TYPE`;

create table `GAME_CLIENT_TYPE` (
	ID_GAME_CLIENT_TYPE INT NOT NULL AUTO_INCREMENT,

	UNIQUE_NAME VARCHAR(250) NULL,

	primary key (ID_GAME_CLIENT_TYPE)
);


drop table if exists `GAME_OBJECT_TYPE_REPRESENTATION`;

create table `GAME_OBJECT_TYPE_REPRESENTATION` (
	ID_GAME_OBJECT_TYPE_REPRESENTATION INT NOT NULL AUTO_INCREMENT,

	GAME_OBJECT_TYPE_ID INT NULL,
	GAME_CLIENT_TYPE_ID INT NULL,
	OBJECT_HASH short NULL,

	primary key (ID_GAME_OBJECT_TYPE_REPRESENTATION)
);


drop table if exists `GAME_OBJECT_TYPE_STATE`;

create table `GAME_OBJECT_TYPE_STATE` (
	ID_GAME_OBJECT_TYPE_STATE INT NOT NULL AUTO_INCREMENT,

	GAME_OBJECT_TYPE_ID INT NULL,
	NAME VARCHAR(250) NULL,

	primary key (ID_GAME_OBJECT_TYPE_STATE)
);


drop table if exists `GAME_OBJECT_TYPE_PROPERTY`;

create table `GAME_OBJECT_TYPE_PROPERTY` (
	ID_GAME_OBJECT_TYPE_PROPERTY INT NOT NULL AUTO_INCREMENT,

	GAME_OBJECT_TYPE_ID INT NULL,
	PROPERTY_NAME VARCHAR(250) NULL,
	PROPERTY_DEFAULT_VALUE DOUBLE NULL,
	PROPERTY_MIN_VALUE DOUBLE NULL,
	PROPERTY_MAX_VALUE DOUBLE NULL,

	primary key (ID_GAME_OBJECT_TYPE_PROPERTY)
);


drop table if exists `GAME_ADDON_INTERACTION_RECEIVING_PROPERTY_MODIFIER`;

create table `GAME_ADDON_INTERACTION_RECEIVING_PROPERTY_MODIFIER` (
	ID_GAME_ADDON_INTERACTION_RECEIVING_PROPERTY_MODIFIER INT NOT NULL AUTO_INCREMENT,

	GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE_ID INT NULL,
	AFFECTED_GAME_OBJECT_TYPE_PROPERTY_ID INT NULL,
	APPLIED_PROPERTY_VALUE_MULTIPLIER DOUBLE NULL,

	primary key (ID_GAME_ADDON_INTERACTION_RECEIVING_PROPERTY_MODIFIER)
);


drop table if exists `GAME_OBJECT_TYPE_INTERACTION_PROPERTY`;

create table `GAME_OBJECT_TYPE_INTERACTION_PROPERTY` (
	ID_GAME_OBJECT_TYPE_INTERACTION_PROPERTY INT NOT NULL AUTO_INCREMENT,

	GAME_OBJECT_TYPE_INTERACTION_ID INT NULL,
	DONATING_GAME_OBJECT_TYPE_PROPERTY_ID INT NULL,
	RECEIVING_GAME_OBJECT_TYPE_PROPERTY_ID INT NULL,
	OVERFLOW_GAME_OBJECT_TYPE_PROPERTY_ID INT NULL,
	IS_INCREMENTAL short NULL,
	IS_INVERTED short NULL,

	primary key (ID_GAME_OBJECT_TYPE_INTERACTION_PROPERTY)
);


drop table if exists `GAME_OBJECT_TYPE_STATE_PROPERTY_MODIFIER`;

create table `GAME_OBJECT_TYPE_STATE_PROPERTY_MODIFIER` (
	ID_GAME_OBJECT_TYPE_STATE_PROPERTY_MODIFIER INT NOT NULL AUTO_INCREMENT,

	GAME_OBJECT_TYPE_STATE_ID INT NULL,
	GAME_OBJECT_TYPE_PROPERTY_ID INT NULL,
	PROPERTY_ACTUAL_VALUE DOUBLE NULL,

	primary key (ID_GAME_OBJECT_TYPE_STATE_PROPERTY_MODIFIER)
);


drop table if exists `GAME_OBJECT_TYPE_CLASS`;

create table `GAME_OBJECT_TYPE_CLASS` (
	ID_GAME_OBJECT_TYPE_CLASS INT NOT NULL AUTO_INCREMENT,

	NAME VARCHAR(250) NULL,

	primary key (ID_GAME_OBJECT_TYPE_CLASS)
);


drop table if exists `GAME_ASSETS_REPOSITORY`;

create table `GAME_ASSETS_REPOSITORY` (
	ID_GAME_ASSETS_REPOSITORY INT NOT NULL AUTO_INCREMENT,

	UNIQUE_NAME VARCHAR(250) NULL,
	DESCRIPTION TEXT NULL,
	PICTURE_REF_PATH TEXT NULL,

	primary key (ID_GAME_ASSETS_REPOSITORY)
);


drop table if exists `GAME_OBJECT_TYPE`;

create table `GAME_OBJECT_TYPE` (
	ID_GAME_OBJECT_TYPE INT NOT NULL AUTO_INCREMENT,

	GAME_ASSETS_REPOSITORY_ID INT NULL,
	GAME_OBJECT_TYPE_CLASS_ID INT NULL,
	UNIQUE_NAME VARCHAR(250) NULL,
	IS_EXPERIMENTAL short NULL,

	primary key (ID_GAME_OBJECT_TYPE)
);




-- ADD CONSTRAINTS for the PLAYABLE_CHARACTER_TYPE table --
ALTER TABLE `PLAYABLE_CHARACTER_TYPE` 
ADD CONSTRAINT `FK_PLAYABLE_CHARACTER_TYPE_GAME_OBJECT_TYPE_ID` FOREIGN KEY (GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);


-- ADD CONSTRAINTS for the GAME_WORLD_SPAWN_POINT_TYPE table --
ALTER TABLE `GAME_WORLD_SPAWN_POINT_TYPE` 
ADD CONSTRAINT `FK_GAME_WORLD_SPAWN_POINT_TYPE_SPAWN_POINT_GAME_OBJECT_TYPE_ID` FOREIGN KEY (SPAWN_POINT_GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);

ALTER TABLE `GAME_WORLD_SPAWN_POINT_TYPE` 
ADD CONSTRAINT `FK_GAME_WORLD_SPAWN_POINT_TYPE_SPAWNED_GAME_OBJECT_TYPE_ID` FOREIGN KEY (SPAWNED_GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);


-- ADD CONSTRAINTS for the GAME_WORLD_CELL_TYPE table --
ALTER TABLE `GAME_WORLD_CELL_TYPE` 
ADD CONSTRAINT `FK_GAME_WORLD_CELL_TYPE_GAME_OBJECT_TYPE_ID` FOREIGN KEY (GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);


-- ADD CONSTRAINTS for the GAME_WORLD_CELL table --
ALTER TABLE `GAME_WORLD_CELL` 
ADD CONSTRAINT `FK_GAME_WORLD_CELL_GAME_WORLD_ID` FOREIGN KEY (GAME_WORLD_ID)
REFERENCES `GAME_WORLD` (ID_GAME_WORLD);

ALTER TABLE `GAME_WORLD_CELL` 
ADD CONSTRAINT `FK_GAME_WORLD_CELL_GAME_WORLD_CELL_TYPE_ID` FOREIGN KEY (GAME_WORLD_CELL_TYPE_ID)
REFERENCES `GAME_WORLD_CELL_TYPE` (ID_GAME_WORLD_CELL_TYPE);

ALTER TABLE `GAME_WORLD_CELL` 
ADD CONSTRAINT `FK_GAME_WORLD_CELL_ATTACHED_GAME_WORLD_SPAWN_POINT_TYPE_ID` FOREIGN KEY (ATTACHED_GAME_WORLD_SPAWN_POINT_TYPE_ID)
REFERENCES `GAME_WORLD_SPAWN_POINT_TYPE` (ID_GAME_WORLD_SPAWN_POINT_TYPE);


-- ADD CONSTRAINTS for the GAME_WORLD_CELL_PROPERTY table --
ALTER TABLE `GAME_WORLD_CELL_PROPERTY` 
ADD CONSTRAINT `FK_GAME_WORLD_CELL_PROPERTY_GAME_WORLD_CELL_ID` FOREIGN KEY (GAME_WORLD_CELL_ID)
REFERENCES `GAME_WORLD_CELL` (ID_GAME_WORLD_CELL);

ALTER TABLE `GAME_WORLD_CELL_PROPERTY` 
ADD CONSTRAINT `FK_GAME_WORLD_CELL_PROPERTY_GAME_OBJECT_TYPE_PROPERTY_ID` FOREIGN KEY (GAME_OBJECT_TYPE_PROPERTY_ID)
REFERENCES `GAME_OBJECT_TYPE_PROPERTY` (ID_GAME_OBJECT_TYPE_PROPERTY);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE_AUTOMATION table --
ALTER TABLE `GAME_OBJECT_TYPE_AUTOMATION` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_AUTOMATION_GAME_OBJECT_TYPE_ID` FOREIGN KEY (GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);

ALTER TABLE `GAME_OBJECT_TYPE_AUTOMATION` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_AUTOMATION_AUTOMATION_OBJECT_PROVIDER_ID` FOREIGN KEY (AUTOMATION_OBJECT_PROVIDER_ID)
REFERENCES `AUTOMATION_OBJECT_PROVIDER` (ID_AUTOMATION_OBJECT_PROVIDER);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE_STATE_TRANSITION table --
ALTER TABLE `GAME_OBJECT_TYPE_STATE_TRANSITION` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_STATE_TRANSITION_SOURCE_GAME_OBJECT_TYPE_STATE_ID` FOREIGN KEY (SOURCE_GAME_OBJECT_TYPE_STATE_ID)
REFERENCES `GAME_OBJECT_TYPE_STATE` (ID_GAME_OBJECT_TYPE_STATE);

ALTER TABLE `GAME_OBJECT_TYPE_STATE_TRANSITION` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_STATE_TRANSITION_TARGET_GAME_OBJECT_TYPE_STATE_ID` FOREIGN KEY (TARGET_GAME_OBJECT_TYPE_STATE_ID)
REFERENCES `GAME_OBJECT_TYPE_STATE` (ID_GAME_OBJECT_TYPE_STATE);

ALTER TABLE `GAME_OBJECT_TYPE_STATE_TRANSITION` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_STATE_TRANSITION_TRIGGER_ACTION_ID` FOREIGN KEY (TRIGGER_ACTION_ID)
REFERENCES `ACTION` (ID_ACTION);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE table --
ALTER TABLE `GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE_ADDON_GAME_OBJECT_TYPE_ID` FOREIGN KEY (ADDON_GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);

ALTER TABLE `GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE_APPLICABLE_TO_GAME_OBJECT_TYPE_ID` FOREIGN KEY (APPLICABLE_TO_GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);

ALTER TABLE `GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE_TRIGGER_ACTION_ID` FOREIGN KEY (TRIGGER_ACTION_ID)
REFERENCES `ACTION` (ID_ACTION);

ALTER TABLE `GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE_SPAWNABLE_GAME_OBJECT_TYPE_ID` FOREIGN KEY (SPAWNABLE_GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE_INTERACTION table --
ALTER TABLE `GAME_OBJECT_TYPE_INTERACTION` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_INTERACTION_DONATING_GAME_OBJECT_TYPE_ID` FOREIGN KEY (DONATING_GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);

ALTER TABLE `GAME_OBJECT_TYPE_INTERACTION` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_INTERACTION_RECEIVING_GAME_OBJECT_TYPE_ID` FOREIGN KEY (RECEIVING_GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE_REPRESENTATION table --
ALTER TABLE `GAME_OBJECT_TYPE_REPRESENTATION` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_REPRESENTATION_GAME_OBJECT_TYPE_ID` FOREIGN KEY (GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);

ALTER TABLE `GAME_OBJECT_TYPE_REPRESENTATION` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_REPRESENTATION_GAME_CLIENT_TYPE_ID` FOREIGN KEY (GAME_CLIENT_TYPE_ID)
REFERENCES `GAME_CLIENT_TYPE` (ID_GAME_CLIENT_TYPE);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE_STATE table --
ALTER TABLE `GAME_OBJECT_TYPE_STATE` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_STATE_GAME_OBJECT_TYPE_ID` FOREIGN KEY (GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE_PROPERTY table --
ALTER TABLE `GAME_OBJECT_TYPE_PROPERTY` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_PROPERTY_GAME_OBJECT_TYPE_ID` FOREIGN KEY (GAME_OBJECT_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE` (ID_GAME_OBJECT_TYPE);


-- ADD CONSTRAINTS for the GAME_ADDON_INTERACTION_RECEIVING_PROPERTY_MODIFIER table --
ALTER TABLE `GAME_ADDON_INTERACTION_RECEIVING_PROPERTY_MODIFIER` 
ADD CONSTRAINT `FK_GAME_ADDON_INTERACTION_RECEIVING_PROPERTY_MODIFIER_GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE_ID` FOREIGN KEY (GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE_ID)
REFERENCES `GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE` (ID_GAME_OBJECT_TYPE_ALLOWED_ADDON_TYPE);

ALTER TABLE `GAME_ADDON_INTERACTION_RECEIVING_PROPERTY_MODIFIER` 
ADD CONSTRAINT `FK_GAME_ADDON_INTERACTION_RECEIVING_PROPERTY_MODIFIER_AFFECTED_GAME_OBJECT_TYPE_PROPERTY_ID` FOREIGN KEY (AFFECTED_GAME_OBJECT_TYPE_PROPERTY_ID)
REFERENCES `GAME_OBJECT_TYPE_PROPERTY` (ID_GAME_OBJECT_TYPE_PROPERTY);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE_INTERACTION_PROPERTY table --
ALTER TABLE `GAME_OBJECT_TYPE_INTERACTION_PROPERTY` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_INTERACTION_PROPERTY_GAME_OBJECT_TYPE_INTERACTION_ID` FOREIGN KEY (GAME_OBJECT_TYPE_INTERACTION_ID)
REFERENCES `GAME_OBJECT_TYPE_INTERACTION` (ID_GAME_OBJECT_TYPE_INTERACTION);

ALTER TABLE `GAME_OBJECT_TYPE_INTERACTION_PROPERTY` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_INTERACTION_PROPERTY_DONATING_GAME_OBJECT_TYPE_PROPERTY_ID` FOREIGN KEY (DONATING_GAME_OBJECT_TYPE_PROPERTY_ID)
REFERENCES `GAME_OBJECT_TYPE_PROPERTY` (ID_GAME_OBJECT_TYPE_PROPERTY);

ALTER TABLE `GAME_OBJECT_TYPE_INTERACTION_PROPERTY` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_INTERACTION_PROPERTY_RECEIVING_GAME_OBJECT_TYPE_PROPERTY_ID` FOREIGN KEY (RECEIVING_GAME_OBJECT_TYPE_PROPERTY_ID)
REFERENCES `GAME_OBJECT_TYPE_PROPERTY` (ID_GAME_OBJECT_TYPE_PROPERTY);

ALTER TABLE `GAME_OBJECT_TYPE_INTERACTION_PROPERTY` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_INTERACTION_PROPERTY_OVERFLOW_GAME_OBJECT_TYPE_PROPERTY_ID` FOREIGN KEY (OVERFLOW_GAME_OBJECT_TYPE_PROPERTY_ID)
REFERENCES `GAME_OBJECT_TYPE_PROPERTY` (ID_GAME_OBJECT_TYPE_PROPERTY);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE_STATE_PROPERTY_MODIFIER table --
ALTER TABLE `GAME_OBJECT_TYPE_STATE_PROPERTY_MODIFIER` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_STATE_PROPERTY_MODIFIER_GAME_OBJECT_TYPE_STATE_ID` FOREIGN KEY (GAME_OBJECT_TYPE_STATE_ID)
REFERENCES `GAME_OBJECT_TYPE_STATE` (ID_GAME_OBJECT_TYPE_STATE);

ALTER TABLE `GAME_OBJECT_TYPE_STATE_PROPERTY_MODIFIER` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_STATE_PROPERTY_MODIFIER_GAME_OBJECT_TYPE_PROPERTY_ID` FOREIGN KEY (GAME_OBJECT_TYPE_PROPERTY_ID)
REFERENCES `GAME_OBJECT_TYPE_PROPERTY` (ID_GAME_OBJECT_TYPE_PROPERTY);


-- ADD CONSTRAINTS for the GAME_OBJECT_TYPE table --
ALTER TABLE `GAME_OBJECT_TYPE` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_GAME_ASSETS_REPOSITORY_ID` FOREIGN KEY (GAME_ASSETS_REPOSITORY_ID)
REFERENCES `GAME_ASSETS_REPOSITORY` (ID_GAME_ASSETS_REPOSITORY);

ALTER TABLE `GAME_OBJECT_TYPE` 
ADD CONSTRAINT `FK_GAME_OBJECT_TYPE_GAME_OBJECT_TYPE_CLASS_ID` FOREIGN KEY (GAME_OBJECT_TYPE_CLASS_ID)
REFERENCES `GAME_OBJECT_TYPE_CLASS` (ID_GAME_OBJECT_TYPE_CLASS);


